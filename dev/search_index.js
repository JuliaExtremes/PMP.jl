var documenterSearchIndex = {"docs":
[{"location":"MoistureMaximization/#PMP-estimation-by-moisture-maximization","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"","category":"section"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"This example shows how to estimate 72h PMP by moisture maximization with PMP.jl and the recommended methodology by the World Meteorological Organization (WMO). The example uses observed data from the Montréal-Trudeau International Airport station. To avoid solid precipitation, we only consider data from May to October and from 1953 to 2012. ","category":"page"},{"location":"MoistureMaximization/#Load-required-Julia-packages","page":"PMP estimation by moisture maximization","title":"Load required Julia packages","text":"","category":"section"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"Before executing this tutorial, make sure to have installed the following packages:","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"DataFrames.jl (for using the DataFrame type)\nPMP.jl","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"and import them using the following command:","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"using DataFrames, PMP","category":"page"},{"location":"MoistureMaximization/#Load-required-datasets","page":"PMP estimation by moisture maximization","title":"Load required datasets","text":"","category":"section"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"Loading the observed daily precipitations (in mm) and observed hourly dew point (in °C):","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"# Load the data\nrain = PMP.dataset(\"rain\")\ndewpoint = PMP.dataset(\"dewpoint\")\n \nprintln(\"\") # hide","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"","category":"page"},{"location":"MoistureMaximization/#Storm-selection","page":"PMP estimation by moisture maximization","title":"Storm selection","text":"","category":"section"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"First, we need to select storms for maximization. We want to focus on maximizing the 10% largest precipitation event of each year.","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"# Select \"PMP magnitude\" storms\np = 0.1    # 10% \nd1 = 24    # One observation per day\nd2 = 72    # PMP duration\n\nstorm = storm_selection(rain.Rain, rain.Date, p, d1, d2)\nprintln(\"\") # hide","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"We also could have used total_precipitation then storm_selection as follow :","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"# Aggregate precipitations of duration d1 to precipitations of duration d2 without overlap\nrain_on_72h = total_precipitation(rain.Rain, rain.Date, d1, d2)\n\n# Select the p greatest storms of each year\nstorm = storm_selection(rain_on_72h.Rain, rain_on_72h.Date, p)\nprintln(\"\") # hide","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"","category":"page"},{"location":"MoistureMaximization/#Precipitable-water-calculation","page":"PMP estimation by moisture maximization","title":"Precipitable water calculation","text":"","category":"section"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"At Montréal-Trudeau International Airport station, we do not have direct access to precipitable water (PW) observations; instead, we need to convert dewpoint (in °C) to PW (in mm). The dewpoint is measured hourly, and the highest persisting dewpoint represents the data that best characterizes the humidity for each storm. According to the WMO manual, the persisting dewpoint for a specified time interval is defined as 'the value equalled or exceeded at all observations during the period.' For our purposes, we will use 12-hour time intervals, as recommended by the WMO. Furthermore, we are specifically interested in dewpoint observations taken during the PMP magnitude storms determined in the previous section. Accordingly, we need to select those relevant observation from the dewpoint dataset. ","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"The PW_storm function utilizes storm dates, the dewpoint dataset, PMP duration, dewpoint observation frequency, and the selected time interval for persisting dewpoint to return the PW of each storm of interest.","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"obs_freq = 1     # One observation per hour\ntime_int = 12    # Keep the smallest observation on each moving window of size 12h\n\n# Calculate appropriate pw for each storm\npw_storm = PW_storm(storm.Date, dewpoint.Dew, dewpoint.DateTime, d2, obs_freq, time_int)\nprintln(\"\") # hide","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"If the dewpoint dataset contains observations associated only with the storms of interest, it is possible to use get_max_persisting_dew followed by dewpoint_to_PW to calculate the PW for each precipitation event. Some methods (Beauchamp et al., 2013, Rousseau et al., 2014) suggest using humidity data from before the event in addition to the observations taken during the storm. Hence, it could be appropriate to either utilize these two functions or modify PW_storm to take those data into consideration.","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"","category":"page"},{"location":"MoistureMaximization/#Maximization-ratio-and-PMP-estimation","page":"PMP estimation by moisture maximization","title":"Maximization ratio and PMP estimation","text":"","category":"section"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"To maximize the PMP magnitude storms, the precipitation has to be multiplied by the maximization ratio (MR), which is defined by fracPW_maxPW_storm. PW_max can be the maximum precipitable water recorded during the month of the event of the entire dataset or the return value for a given return period for the month of the event. We calculate both fot all the months of interest (May to October): ","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"# PW dataset construction\npw_dataset = DataFrame(Date = dewpoint.DateTime)\npw_dataset.PW = dewpoint_to_PW.(dewpoint.Dew)\n\npw_max = PW_max(pw_dataset.PW, pw_dataset.Date)                  # PW max\npw_100 = PW_return_period(pw_dataset.PW, pw_dataset.Date, 100)   # PW 100\n\nprintln(\"\") # hide","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"If we want information (date, maximization ratio, effective precipitation (EP) and maximized rain) on all the maximized storms, we can call the storm_maximization function : ","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"maximized_storm_PW_max = storm_maximization(storm.Rain, pw_storm.PW, storm.Date, pw_max.PW_max)\nmaximized_storm_PW_100 = storm_maximization(storm.Rain, pw_storm.PW, storm.Date, pw_100.PW_rp)\nprintln(\"\") # hide","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"Alternatively, we could exclusively estimate the PMP as follows :","category":"page"},{"location":"MoistureMaximization/","page":"PMP estimation by moisture maximization","title":"PMP estimation by moisture maximization","text":"pmp_max = PMP_mm(storm.Rain, pw_storm.PW, storm.Date, pw_max.PW_max)\npmp_100 = PMP_mm(storm.Rain, pw_storm.PW, storm.Date, pw_100.PW_rp)\nprintln(\"\") # hide","category":"page"},{"location":"GettingStarted/#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"GettingStarted/","page":"Getting started","title":"Getting started","text":"Blah blah blah.","category":"page"},{"location":"#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"Modules =[PMP]","category":"page"},{"location":"#PMP.PearsonType1","page":"Index","title":"PMP.PearsonType1","text":"PearsonType1(a,b,α,β)\n\nThe Pearson Type 1 distribution with shape parameters α and β defined on the interval (a, b) has the probability density function for ayb\n\nf(y a b alpha beta) = frac1B(alpha beta) frac(y-a)^alpha-1 (b-y)^beta-1(b-a)^alpha+beta-1\n\nand 0 elsewhere.\n\nPearsonType1()   # Pearson Type 1 distribution on the unit interval with shape parameters (1,1) i.e. Uniform(0, 1)\n\n\nparams(d)        # Get the parameters, i.e. (a, b, α, β)\n\nlocation(d)      # Get the location parameter, i.e. a\nscale(d)         # Get the scale parameter, i.e. b-a\nshape(d)         # Get the shape parameters, i.e. (α, β)\n\nExternal links\n\nPearson Type 1 distribution on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"#PMP.PearsonType1b","page":"Index","title":"PMP.PearsonType1b","text":"PearsonType1b(b,α,β)\n\nThe Pearson Type 1 distribution with shape parameters α and β defined on the interval (0, b) has the probability density function for 0yb\n\nf(y b alpha beta) = frac1B(alpha beta) fracy^alpha-1 (b-y)^beta-1b^alpha+beta-1\n\nand 0 elsewhere.\n\nPearsonType1b()   # Pearson Type 1 distribution on the unit interval with shape parameters (1,1) i.e. Uniform(0, 1)\n\n\nparams(d)        # Get the parameters, i.e. (b, α, β)\n\nscale(d)         # Get the scale parameter, i.e. b\nshape(d)         # Get the shape parameters, i.e. (α, β)\n\nExternal links\n\nPearson Type 1 distribution on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"#PMP.PearsonType1c","page":"Index","title":"PMP.PearsonType1c","text":"PearsonType1c(b,μ,ν)\n\nThe Pearson Type 1 distribution with shape parameters μ and ν defined on the interval (0, b) has the probability density function for 0yb\n\nf(y b mu nu) = frac1B(mu nu) fracy^munu-1 (b-y)^nu(1-mu) - 1b^nu-1\n\nand 0 elsewhere.\n\nPearsonType1c()   # Pearson Type 1 distribution on the unit interval with shape parameters (1/2,2) i.e. Uniform(0, 1)\n\n\nparams(d)        # Get the parameters, i.e. (b, μ, ν)\n\nscale(d)         # Get the scale parameter, i.e. b\nshape(d)         # Get the shape parameters, i.e. (μ, ν)\n\n\n\n\n\n","category":"type"},{"location":"#Base.maximum-Tuple{PearsonType1b}","page":"Index","title":"Base.maximum","text":"maximum(pd::PearsonType1b)\n\nObtain the upper limit of the distribution pd, b.\n\n\n\n\n\n","category":"method"},{"location":"#Base.maximum-Tuple{PearsonType1}","page":"Index","title":"Base.maximum","text":"maximum(pd::PearsonType1)\n\nObtain the upper limit of the distribution pd, b.\n\n\n\n\n\n","category":"method"},{"location":"#Base.minimum-Tuple{PearsonType1b}","page":"Index","title":"Base.minimum","text":"minimum(pd::PearsonType1b)\n\nObtain the lower limit of the distribution pd, 0.\n\n\n\n\n\n","category":"method"},{"location":"#Base.minimum-Tuple{PearsonType1}","page":"Index","title":"Base.minimum","text":"minimum(pd::PearsonType1)\n\nObtain the lower limit of the distribution pd, a.\n\n\n\n\n\n","category":"method"},{"location":"#Base.rand-Tuple{Random.AbstractRNG, PearsonType1b}","page":"Index","title":"Base.rand","text":"rand(rng::Random.AbstractRNG, pd::PearsonType1b)\n\nGenerate a random realization of distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Base.rand-Tuple{Random.AbstractRNG, PearsonType1}","page":"Index","title":"Base.rand","text":"rand(rng::Random.AbstractRNG, pd::PearsonType1)\n\nGenerate a random realization of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.cdf-Tuple{PearsonType1, Real}","page":"Index","title":"Distributions.cdf","text":"cdf(pd::PearsonType1, x::Real)\n\nCompute the cumulative distribution function value of pd at point x.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.cdf-Tuple{PearsonType1b, Real}","page":"Index","title":"Distributions.cdf","text":"cdf(pd::PearsonType1b, x::Real)\n\nCompute the cumulative distribution function value of pd at point x.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.insupport-Tuple{PearsonType1, Real}","page":"Index","title":"Distributions.insupport","text":"insupport(pd::PearsonType1, x::Real)\n\nEstablish if the point x is within the support of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.insupport-Tuple{PearsonType1b, Real}","page":"Index","title":"Distributions.insupport","text":"insupport(pd::PearsonType1b, x::Real)\n\nEstablish if the point x is within the support of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.location-Tuple{PearsonType1b}","page":"Index","title":"Distributions.location","text":"location(pd::PearsonType1b)\n\nObtain distribution location parameter 0.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.location-Tuple{PearsonType1c}","page":"Index","title":"Distributions.location","text":"location(pd::PearsonType1c)\n\nObtain distribution location parameter 0.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.location-Tuple{PearsonType1}","page":"Index","title":"Distributions.location","text":"location(pd::PearsonType1)\n\nObtain distribution location parameter a.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.logpdf-Tuple{PearsonType1, Real}","page":"Index","title":"Distributions.logpdf","text":"logpdf(pd::PearsonType1, x::Real)\n\nCompute the log of the value of the probability density function of pd at point x.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.logpdf-Tuple{PearsonType1b, Real}","page":"Index","title":"Distributions.logpdf","text":"logpdf(pd::PearsonType1b, x::Real)\n\nCompute the log of the value of the probability density function of pd at point x.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.logpdf-Tuple{PearsonType1c, Real}","page":"Index","title":"Distributions.logpdf","text":"logpdf(pd::PearsonType1c, x::Real)\n\nCompute the log of the value of the probability density function of pd at point x.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.scale-Tuple{PearsonType1b}","page":"Index","title":"Distributions.scale","text":"scale(pd::PearsonType1b)\n\nObtain distribution scale parameter b.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.scale-Tuple{PearsonType1c}","page":"Index","title":"Distributions.scale","text":"scale(pd::PearsonType1c)\n\nObtain distribution scale parameter b.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.scale-Tuple{PearsonType1}","page":"Index","title":"Distributions.scale","text":"scale(pd::PearsonType1)\n\nObtain distribution scale, given by b-a.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.shape-Tuple{PearsonType1b}","page":"Index","title":"Distributions.shape","text":"shape(pd::PearsonType1b)\n\nObtain distribution shape parameters α and β.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.shape-Tuple{PearsonType1c}","page":"Index","title":"Distributions.shape","text":"shape(pd::PearsonType1c)\n\nObtain distribution shape parameters μ and ν.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.shape-Tuple{PearsonType1}","page":"Index","title":"Distributions.shape","text":"shape(pd::PearsonType1)\n\nObtain distribution shape parameters α and β.\n\n\n\n\n\n","category":"method"},{"location":"#PMP.PMP_GEV-Tuple{Vector{<:Real}, Vector{Dates.DateTime}, Real, Int64, Int64}","page":"Index","title":"PMP.PMP_GEV","text":"PMP_GEV(rain::Vector{<:Real}, date::Vector{DateTime}, return_time::Real, d₁::Int, d₂::Int)\nPMP_GEV(rain::Vector{<:Real}, date::Vector{DateTime}, return_time::Real)\n\nEstimation of the PMP by univariate GEV method, with a chosen return time.\n\n\n\n\n\n","category":"method"},{"location":"#PMP.PMP_Hershfield-Tuple{Vector{<:Real}, Vector{Dates.DateTime}, Real, Int64, Int64}","page":"Index","title":"PMP.PMP_Hershfield","text":"PMP_Hershfield(rain_daily::Vector{<:Real}, date::Vector{DateTime}, K::Real, d₁::Int, d₂::Int)\nPMP_Hershfield(rain_daily::Vector{<:Real}, date::Vector{DateTime}, K::Real)\nPMP_Hershfield(rain_daily::Vector{<:Real}, date::Vector{DateTime}, d₁::Int, d₂::Int)\nPMP_Hershfield(rain_daily::Vector{<:Real}, date::Vector{DateTime})\n\nEstimation of the PMP by Hershfield empirical method.\n\n\n\n\n\n","category":"method"},{"location":"#PMP.PMP_mm","page":"Index","title":"PMP.PMP_mm","text":"PMP_mm(rain_storm::Vector{<:Real}, pw_storm::Vector{<:Real}, date_storm::Vector{DateTime}, pw_max::Vector{<:Real})\nPMP_mm(rain_storm::Vector{<:Real}, pw_storm::Vector{<:Real}, date_storm::Vector{Date}, pw_max::Vector{<:Real})\n\nEstimation of the PMP by moisture maximization.\n\n\n\n\n\n","category":"function"},{"location":"#PMP.PW_max","page":"Index","title":"PMP.PW_max","text":"PW_max(pw::Vector{<:Real}, date::Vector{DateTime})\nPW_max(pw::Vector{<:Real}, date::Vector{Date})\n\nEstimate the maximum precipitable water for each month of interest.\n\n\n\n\n\n","category":"function"},{"location":"#PMP.PW_return_period","page":"Index","title":"PMP.PW_return_period","text":"PW_return_period(pw::Vector{<:Real}, date::Vector{DateTime}, return_period::Int=100)\nPW_return_period(pw::Vector{<:Real}, date::Vector{Date}, return_period::Int=100)\n\nEstimate the precipitable water return value for each month of interest for a given return period.\n\n\n\n\n\n","category":"function"},{"location":"#PMP.PW_storm","page":"Index","title":"PMP.PW_storm","text":"PW_storm(storm_date::Vector{DateTime}, dewpoint::Vector{<:Real}, dewpoint_date::Vector{DateTime}, d₂::Int, frequency::Int, time_int::Int=12)\nPW_storm(storm_date::Vector{Date}, dewpoint::Vector{<:Real}, dewpoint_date::Vector{DateTime}, d₂::Int, frequency::Int, time_int::Int=12)\nPW_storm(storm_date::Vector{DateTime}, dewpoint::Vector{<:Real}, dewpoint_date::Vector{Date}, d₂::Int, frequency::Int, time_int::Int=12)\nPW_storm(storm_date::Vector{Date}, dewpoint::Vector{<:Real}, dewpoint_date::Vector{Date}, d₂::Int, frequency::Int, time_int::Int=12)\n\nGet the precipitable water for each storm.\n\n\n\n\n\n","category":"function"},{"location":"#PMP.dataset-Tuple{String}","page":"Index","title":"PMP.dataset","text":"dataset(name::String)::DataFrame\n\nLoad the dataset associated with name.\n\nDatasets available:\n\nrain: observed precipitations (in mm) recorded at the Montréal-Trudeau International Airport;\ndewpoint: observed dew point (in °C) recorded at the Montréal-Trudeau International Airport.\n\nExamples\n\njulia> PMP.dataset(\"rain\")\n\n\n\n\n\n","category":"method"},{"location":"#PMP.dewpoint_to_PW-Tuple{Real}","page":"Index","title":"PMP.dewpoint_to_PW","text":"dewpoint_to_PW(dew_data::Real)\n\nConvert dew point observation in precipitable water (PW).\n\nThe relation is given by the Table A.1.1 of the annex of the \"Manual on Estimation of Probable Maximum Precipitation (PMP)\" (WMO, 2009).\n\n\n\n\n\n","category":"method"},{"location":"#PMP.get_max_persisting_dew","page":"Index","title":"PMP.get_max_persisting_dew","text":"get_max_persisting_dew(dewpoint::Vector{<:Real}, frequency::Int, time_int::Int=12)\n\nGet the maximum persisting dewpoint of a storm for which data are taken at a given frequency.\n\nThe highest persisting dewpoint for some specified time interval is the value equalled or exceeded at all observations during the period (WMO, 2009).\n\n\n\n\n\n","category":"function"},{"location":"#PMP.storm_maximization","page":"Index","title":"PMP.storm_maximization","text":"storm_maximization(rain_storm::Vector{<:Real}, pw_storm::Vector{<:Real}, date_storm::Vector{DateTime}, pw_max::Vector{<:Real})\nstorm_maximization(rain_storm::Vector{<:Real}, pw_storm::Vector{<:Real}, date_storm::Vector{Date}, pw_max::Vector{<:Real})\n\nEstimation of the maximization ratio, effective precipitation and maximized precipitation.\n\n\n\n\n\n","category":"function"},{"location":"#PMP.storm_selection","page":"Index","title":"PMP.storm_selection","text":"storm_selection(rain::Vector{<:Real}, date::Vector{DateTime}, p::Real, d₁::Int, d₂::Int=72)\nstorm_selection(rain::Vector{<:Real}, date::Vector{Date}, p::Real, d₁::Int, d₂::Int=72)\nstorm_selection(rain::Vector{<:Real}, date::Vector{DateTime}, p::Real)\nstorm_selection(rain::Vector{<:Real}, date::Vector{Date}, p::Real)\n\nSelect the PMP magnitude storms of each year.\n\nThe function choose the greatest precipitations of duration d₂ from data of duration d₁ while avoiding overlap. The function then select the p (a proportion) greatest storm of each year to be maximized.\n\n\n\n\n\n","category":"function"},{"location":"#PMP.total_precipitation","page":"Index","title":"PMP.total_precipitation","text":"total_precipitation(rain::Vector{<:Real}, date::Vector{DateTime}, d₁::Int, d₂::Int)\ntotal_precipitation(rain::Vector{<:Real}, date::Vector{Date}, d₁::Int, d₂::Int)\n\nEstimate the greatest precipitations taken over a given duration d₁ on a longer duration d₂.\n\nThe function choose the greatest precipitations of duration d₂ while avoiding overlap. Datasets rain and date should not contain missing data. \n\n\n\n\n\n","category":"function"},{"location":"#Statistics.mean-Tuple{PearsonType1b}","page":"Index","title":"Statistics.mean","text":"mean(pd::PearsonType1b)\n\nObtain the expectation of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.mean-Tuple{PearsonType1}","page":"Index","title":"Statistics.mean","text":"mean(pd::PearsonType1)\n\nObtain the expectation of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.quantile-Tuple{PearsonType1, Real}","page":"Index","title":"Statistics.quantile","text":"quantile(pd::PearsonType1, p::Real)\n\nCompute the quantile of probability p.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.quantile-Tuple{PearsonType1b, Real}","page":"Index","title":"Statistics.quantile","text":"quantile(pd::PearsonType1b, p::Real)\n\nCompute the quantile of probability p.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.quantile-Tuple{PearsonType1c, Real}","page":"Index","title":"Statistics.quantile","text":"quantile(pd::PearsonType1c, p::Real)\n\nCompute the quantile of probability p.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.std-Tuple{PearsonType1b}","page":"Index","title":"Statistics.std","text":"std(pd::PearsonType1b)\n\nObtain the standard deviation of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.std-Tuple{PearsonType1}","page":"Index","title":"Statistics.std","text":"std(pd::PearsonType1)\n\nObtain the standard deviation of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.var-Tuple{PearsonType1b}","page":"Index","title":"Statistics.var","text":"var(pd::PearsonType1b)\n\nObtain the variance of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#Statistics.var-Tuple{PearsonType1}","page":"Index","title":"Statistics.var","text":"var(pd::PearsonType1)\n\nObtain the variance of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#StatsAPI.params-Tuple{PearsonType1b}","page":"Index","title":"StatsAPI.params","text":"shape(pd::PearsonType1b)\n\nObtain all distribution parameters b, α and β.\n\n\n\n\n\n","category":"method"},{"location":"#StatsAPI.params-Tuple{PearsonType1c}","page":"Index","title":"StatsAPI.params","text":"shape(pd::PearsonType1c)\n\nObtain all distribution parameters b, μ and ν.\n\n\n\n\n\n","category":"method"},{"location":"#StatsAPI.params-Tuple{PearsonType1}","page":"Index","title":"StatsAPI.params","text":"shape(pd::PearsonType1)\n\nObtain all distribution parameters a, b, α and β.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.entropy-Tuple{PearsonType1b}","page":"Index","title":"StatsBase.entropy","text":"entropy(pd::PearsonType1b)\nentropy(pd::PearsonType1b, base::Real)\n\nCompute the entropy value of distribution pd, w.r.t. a given base if given.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.entropy-Tuple{PearsonType1}","page":"Index","title":"StatsBase.entropy","text":"entropy(pd::PearsonType1)\nentropy(pd::PearsonType1, base::Real)\n\nCompute the entropy value of distribution pd, w.r.t. a given base if given.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.kurtosis-Tuple{PearsonType1b}","page":"Index","title":"StatsBase.kurtosis","text":"kurtosis(pd::PearsonType1b)\nkurtosis(pd::PearsonType1b, correction::Bool)\n\nObtain the excess kurtosis (if correction = false) or kurtosis (if correction = true) of the distribution pd .\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.kurtosis-Tuple{PearsonType1}","page":"Index","title":"StatsBase.kurtosis","text":"kurtosis(pd::PearsonType1)\nkurtosis(pd::PearsonType1, correction::Bool)\n\nObtain the excess kurtosis (if correction = false) or kurtosis (if correction = true) of the distribution pd .\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.mode-Tuple{PearsonType1b}","page":"Index","title":"StatsBase.mode","text":"mode(pd::PearsonType1b)\n\nObtain the first mode of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.mode-Tuple{PearsonType1}","page":"Index","title":"StatsBase.mode","text":"mode(pd::PearsonType1)\n\nObtain the first mode of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.modes-Tuple{PearsonType1b}","page":"Index","title":"StatsBase.modes","text":"modes(pd::PearsonType1b)\n\nObtain all modes (if this makes sense) of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.modes-Tuple{PearsonType1}","page":"Index","title":"StatsBase.modes","text":"modes(pd::PearsonType1)\n\nObtain all modes (if this makes sense) of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.skewness-Tuple{PearsonType1b}","page":"Index","title":"StatsBase.skewness","text":"skewness(pd::PearsonType1b)\n\nObtain the skewness of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.skewness-Tuple{PearsonType1}","page":"Index","title":"StatsBase.skewness","text":"skewness(pd::PearsonType1)\n\nObtain the skewness of the distribution pd.\n\n\n\n\n\n","category":"method"},{"location":"OtherMethods/#PMP-estimation-with-other-methods","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"","category":"section"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"This example shows how to estimate 72h PMP by univariate GEV and Hershfield methods with PMP.jl and the recommended methodology by the World Meteorological Organization (WMO). The example uses observed data from the Montréal-Trudeau International Airport station. To avoid solid precipitation, we only consider data from May to October and from 1953 to 2012. ","category":"page"},{"location":"OtherMethods/#Load-required-Julia-packages","page":"PMP estimation with other methods","title":"Load required Julia packages","text":"","category":"section"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"Before executing this tutorial, make sure to have installed the following packages:","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"DataFrames.jl (for using the DataFrame type)\nPMP.jl","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"and import them using the following command:","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"using DataFrames, PMP","category":"page"},{"location":"OtherMethods/#Load-required-dataset","page":"PMP estimation with other methods","title":"Load required dataset","text":"","category":"section"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"Loading the observed daily precipitations (in mm) :","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"# Load the data\nrain = PMP.dataset(\"rain\")\nprintln(\"\") # hide","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"","category":"page"},{"location":"OtherMethods/#Univariate-GEV-method","page":"PMP estimation with other methods","title":"Univariate GEV method","text":"","category":"section"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"The univariate GEV method is not a WMO-recommended procedure. It estimates the return value of the rain for a given return period. In this example, we choose a 100-year return period.","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"pmp_gev = PMP_GEV(rain.Rain, rain.Date, 100, 24, 72)\nprintln(\"\") # hide","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"We could estimate the 24h PMP with the following :","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"pmp_gev = PMP_GEV(rain.Rain, rain.Date, 100)\nprintln(\"\") # hide","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"","category":"page"},{"location":"OtherMethods/#Hershfield-method","page":"PMP estimation with other methods","title":"Hershfield method","text":"","category":"section"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"The Hershfield method is an empirical approach using the mean and standard deviation of annual maximum precipitations and an abstracted statistic K. The fourth chapter of the WMO manual covers this estimation method in more detail. This present package does not take into consideration the size of the dataset. PMP_Hershfield function can take a chosen K in argument or calculate one with the dataset :","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"pmp_hershfield_k15 = PMP_Hershfield(rain.Rain, rain.Date, 15, 24, 72)\npmp_hershfield = PMP_Hershfield(rain.Rain, rain.Date, 24, 72)\nprintln(\"\") # hide","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"We could estimate the 24h PMP with the following :","category":"page"},{"location":"OtherMethods/","page":"PMP estimation with other methods","title":"PMP estimation with other methods","text":"pmp_hershfield_k15 = PMP_Hershfield(rain.Rain, rain.Date, 15)\npmp_hershfield = PMP_Hershfield(rain.Rain, rain.Date)\nprintln(\"\") # hide","category":"page"}]
}
